android {
    flavorDimensions "channelName"

    productFlavors {

        xingCai {
            applicationId "com.xcsport.app1" //
            versionName "1.0.0"
            versionCode 100
            //resValue "string", "app_name", "${name}"
            resValue "string", "app_name", "摩域体育"
            resValue "string", "domain_url", "https://www.weres.bar/"
            resValue "string", "channel_name", "xingcai"  // 渠道名称
            resValue "string", "build_time", "${buildTime()}"
            resValue "string", "mixpanel_token", "aeb0e83d57c9c765a9f0c1631f16e1d8"
            resValue "bool", "is_tag", "true" // 是否开启统计
            resValue "string", "ms_secret_key", "e429ce40-219f-4f59-8e45-1eb12bc433ed"
            resValue "string", "domain_url_list",
                    ";https://app.cpmuseumdimsum.com:16801" +
                    ";https://app.zgntcpgxds.com:16801" +
                    ";https://app.jyuelab.com:16801" +
                    ";https://app.kylinshe.com:16801" +
                    ";https://app.eyoumoban.com:16801"

            multiDexEnabled true
            dimension "channelName"
        }
        xingCai_pre {
            //applicationId "com.${name.toLowerCase()}.app" //
            applicationId "com.xct01.app" //
            versionName "1.0.0"
            versionCode 100
            //resValue "string", "app_name", "${name}"
            resValue "string", "app_name", "杏彩T${versionCode}"
            resValue "string", "domain_url", "https://ap3sport.oxldkm.com/"
            resValue "string", "channel_name", "xingcai"  // 渠道名称
            resValue "string", "build_time", "${buildTime()}"
            resValue "string", "mixpanel_token", "aeb0e83d57c9c765a9f0c1631f16e1d8"
            resValue "bool", "is_tag", "false" // 是否开启统计
            resValue "string", "ms_secret_key", "e429ce40-219f-4f59-8e45-1eb12bc433ed"
            resValue "string", "domain_url_list", "https://ap3sport.oxldkm.com/"

            multiDexEnabled true
            dimension "channelName"
        }

    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // 打包输出路径 发布用
                //variant.getPackageApplication().outputDirectory = new File("${project.rootDir.absolutePath}/outputs")
                //variant.getPackageApplicationProvider().get().outputDirectory = new File("${project.rootDir.absolutePath}/outputs")
                // 打包文件名
                //def name = variant.flavorName.split("_")[0]
                def name = variant.flavorName
                //outputFileName = "${name}_v${variant.versionCode}_${variant.buildType.name}.apk"
                def tp = "${if (variant.buildType.name == 'debug') '_db' else ''}"
                //outputFileName = "${name}_v${variant.versionCode}${tp}.apk"
                //outputFileName = "${name}_v${variant.versionCode}.apk"
                outputFileName = "${name}_v${variant.versionCode}_${releaseTime()}${tp}.apk"
            }
        }
    }

    /*applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // 打包输出路径 发布用
                //variant.getPackageApplicationProvider().get().outputDirectory = new File("${project.rootDir.absolutePath}/outputs")
                // 打包文件名
                //def name = variant.flavorName.split("_")[0]
                def name = variant.flavorName

                //outputFileName = "${variant.flavorName}_v${variant.versionCode}${tp}_${releaseTime()}.apk"
                //outputFileName = "${name}_v${variant.versionCode}_${variant.buildType.name}.apk"
                def tp = "${if (variant.buildType.name == 'debug') '_tt' else ''}"
                //outputFileName = "${name}_v${variant.versionCode}_${releaseTime()}${tp}.apk"
                //outputFileName = "${name}_v${variant.versionName.replace(".", "_")}_${releaseTime()}${tp}.apk"
                outputFileName = "${name}_v${variant.versionCode}a${tp}.apk"

                //var name1 = "${name}".split("_")[0]
                //var name2 = "${name}".replace("${name1}", "")
                //outputFileName = "${name1}_v${variant.versionCode}${name2}${tp}.apk"
            }

        }
    }*/

}

androidJunkCode {

    def config = {
        packageBase = "com.abc.plugin.ui"  //生成java类根包名
        packageCount = 30 //生成包数量
        activityCountPerPackage = 4 //每个包下生成Activity类数量
        excludeActivityJavaFile = false
        //是否排除生成Activity的Java文件,默认false(layout和写入AndroidManifest.xml还会执行)，主要用于处理类似神策全埋点编译过慢问题
        otherCountPerPackage = 50  //每个包下生成其它类的数量
        methodCountPerClass = 20  //每个类下生成方法数量
        resPrefix = "pg_"  //生成的layout、drawable、string等资源名前缀
        drawableCount = 300  //生成drawable资源数量
        stringCount = 300  //生成string数量
    }

    def config2 = {
        packageBase = "com.abc.plugin"  //生成java类根包名
        packageCount = 20 //生成包数量
        activityCountPerPackage = 4//每个包下生成Activity类数量
        excludeActivityJavaFile = false
        //是否排除生成Activity的Java文件,默认false(layout和写入AndroidManifest.xml还会执行)，主要用于处理类似神策全埋点编译过慢问题
        otherCountPerPackage = 50 //每个包下生成其它类的数量
        methodCountPerClass = 20 //每个类下生成方法数量
        resPrefix = "xc_"  //生成的layout、drawable、string等资源名前缀
        drawableCount = 15  //生成drawable资源数量
        stringCount = 20  //生成string数量
    }

    variantConfig {
        //注意：这里的debug,release为变体名称，如果没有设置productFlavors就是buildType名称，
        // 如果有设置productFlavors就是flavor+buildType，例如（freeRelease、proRelease）
        debug config
        release config

        xingCaiDebug config2
        xingCaiRelease config2
        xingCai_preDebug config2
        xingCai_preRelease config2
    }

}

/**
 * 返回随机的包名，适合下架比较快的应用
 * @param name 渠道名
 * @return 返回随机的包名 com.xxx.name
 */
static def getPluginPkg() {
    // 返回随机的包名 com.xxx.name
    return "com.${getRandomStr()}.plugin.ui"
}

/**
 * 返回随机数 1-9
 * @return 随机数
 */
static def getRandomNum() {
    def num = Math.abs(new Random().nextInt(99))
    int random = 1 + num.toInteger() % 9
    return random
}

static def getRandomNum5() {
    def num = Math.abs(new Random().nextInt(99))
    int random = 1 + num.toInteger() % 5
    return random
}

static def getRandomStr() {
    def characters = "abcdefghijklmnopqrstuvwxyz"
    def num = Math.abs(new Random().nextInt(99))
    int length = 2 + num.toInteger() % 5
    def str = ""
    Random random = new Random()
    for (i in 0..<length) {
        str += characters.charAt(random.nextInt(characters.length()))
    }
    return str
}

static def getResPrefix() {
    /*def characters = "abcdefghijklmnopqrstuvwxyz"
    int length = 2 + Math.abs(new Random().nextInt(3))
    def str = ""
    Random random = new Random()
    for (i in 0..<length) {
        str += characters.charAt(random.nextInt(characters.length()))
    }
    return str*/
    return "${"${getRandomStr()}".substring(0, 2)}_"
}

def static buildTime() {
    //return new Date().format("yyyyMMdd_HHmm", TimeZone.getTimeZone("GMT+8"))
    return new Date().format("yyyyMMdd-HHmm", TimeZone.getTimeZone("GMT+8"))
    //return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}

def static releaseTime() {
    //return new Date().format("yyyyMMdd_HHmm", TimeZone.getTimeZone("GMT+8"))
    return new Date().format("MMddHHmm", TimeZone.getTimeZone("GMT+8"))
    //return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}
