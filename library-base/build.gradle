plugins {
    //id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

apply plugin: 'com.android.library'
apply from: "../module.build.gradle"  // 浏览器路由用

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
            } else {
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig true
        viewBinding true
        //dataBinding true
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //公用的support相关库在base中依赖
    api rootProject.ext.support["design"]
    api rootProject.ext.support["appcompat-v7"]
    //公用资源在base中依赖
    api project(':library-res')
    //核心基础库(由于这是例子, 所以这里采用远程依赖的方式, 可根据实际情况自行换成源码依赖，源码地址：https://github.com/goldze/MVVMHabit)
    api project(':mvvmhabit')
    api 'com.github.liangjingkanji:Net:3.4.14'
    /*api project(':base-adapter-library')
    api project(':baseadapter-recyclerview')*/

    //组件中依赖阿里路由编译框架 (浏览器路由用)
    kapt rootProject.ext.dependencies["arouter-compiler"]

    //阿里路由框架
    api rootProject.ext.dependencies["arouter-api"]
    api rootProject.ext.dependencies["logging-interceptor"]
    api rootProject.ext.dependencies["fastjson"]
    api rootProject.ext.dependencies["mixpanel"]
    api rootProject.ext.dependencies["XPopup"]
    api rootProject.ext.dependencies["XBanner"]
    api rootProject.ext.dependencies["banner"]
    api rootProject.ext.dependencies["base-rvadapter"]
    api rootProject.ext.dependencies["smart-refresh-layout"]
    api rootProject.ext.dependencies["smart-refresh-layout-header"]
    //第三方底部Tabbar
    api rootProject.ext.dependencies["pager-bottom-tab"]
    api rootProject.ext.dependencies["pinyin4j"]
    api rootProject.ext.dependencies["DateTimePicker"]
    //引入zxing二维码
    api rootProject.ext.dependencies["zxing"]
    api rootProject.ext.dependencies["zxingcreat"]
    //增加最新图片选择器
    api rootProject.ext.dependencies["PictureSelectorNew"]
    api rootProject.ext.dependencies["PictureCompress"]

    api rootProject.ext.dependencies["appcenter-analytics"]
    api rootProject.ext.dependencies["appcenter-crashes"]
    api rootProject.ext.dependencies["sentry"]
    api rootProject.ext.dependencies["event-bus"]
    api rootProject.ext.dependencies["lottie"]

    api rootProject.ext.dependencies["agentweb-core"]
    api rootProject.ext.dependencies["agentweb-file"]
    api rootProject.ext.dependencies["agentweb-download"]

    api rootProject.ext.dependencies["constraintlayout"]
    api rootProject.ext.dependencies["okhttp-dnsoverhttps"]

    api rootProject.ext.dependencies["GsonFactory"]
    api rootProject.ext.dependencies["autodispose"]
    api rootProject.ext.dependencies["SVGAPlayer"]
    api rootProject.ext.dependencies["recyclerview-flexibledivider"]

}
